<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--todo namespace里填dao位置-->
<mapper namespace="com.example.role.dao.RoleMapper">

    <insert id="save" parameterType="Role">
        insert into role (name) values (#{name});
    </insert>

    <select id="get" parameterType="int" resultType="Role">
        select id, name from role where id = #{id}
    </select>

    <select id="list" resultType="Role">
        select * from role
    </select>

    <update id="update" parameterType="Role">
        update role set name = #{name} where id = #{id}
    </update>

    <delete id="deleteById" parameterType="int">
        delete from role where id = #{id}
    </delete>
    <!--&lt;!&ndash;    查询所有&ndash;&gt;-->
    <!--    <select id="findAll" resultType="user">-->
    <!--        SELECT * from user-->
    <!--    </select>-->
    <!--&lt;!&ndash;    保存用户&ndash;&gt;-->
    <!--    <insert id="saveUser" parameterType="user">-->
    <!--        &lt;!&ndash; 配置插入操作后获取插入数据的id;keyProperty应该被生成的目标属性，对应实体类, keyColumn与数据库列名，对应表，order表示插入之后执行&ndash;&gt;-->
    <!--        <selectKey keyProperty="id" keyColumn="id" resultType="int" order="AFTER">-->
    <!--            select last_insert_id()-->
    <!--        </selectKey>-->
    <!--        insert into user(username,address,sex) values (#{username},#{address},#{sex})-->
    <!--    </insert>-->
    <!--&lt;!&ndash;    更新用户&ndash;&gt;-->
    <!--    <update id="updateUser" parameterType="user">-->
    <!--        update user set username=#{username},address=#{address},sex=#{sex} where id=#{id}-->
    <!--    </update>-->
    <!--&lt;!&ndash;    删除用户,此处花括号里可任意填写，因为值有一个参数吗，只作为占位符使用&ndash;&gt;-->
    <!--    <delete id="deleteUser" parameterType="Integer">-->
    <!--        delete from user where id=#{id}-->
    <!--    </delete>-->
    <!--&lt;!&ndash;    根据id查询用户&ndash;&gt;-->
    <!--    <select id="findById" parameterType="int" resultType="user">-->
    <!--        select * from USER where id=#{id}-->
    <!--    </select>-->
    <!--&lt;!&ndash;    根据用户名查询用户,有两种写法，第二种value为固定写法，不可更改 &ndash;&gt;-->
    <!--    <select id="findByName" parameterType="String" resultType="user">-->
    <!--        &lt;!&ndash; select * from user where username like #{name} &ndash;&gt;-->
    <!--        select * from user where username like '%%'-->
    <!--    </select>-->
    <!--&lt;!&ndash;    查询用户总数&ndash;&gt;-->
    <!--    <select id="findTotal" resultType="int">-->
    <!--        select count(id) from user-->
    <!--    </select>-->
    <!--&lt;!&ndash;    根据queryVo中的条件查询用户&ndash;&gt;-->
    <!--    <select id="findUserByVo" parameterType="com.example.entity.QueryVo" resultType="user">-->
    <!--        select * from user where username like #{user.username}-->
    <!--    </select>-->
</mapper>